@use '../utils/pref' as *;

/********************************************************************************/
/* 参考:                                                                         */
/* https://github.com/aris-t2/customcssforfx                                    */
/********************************************************************************/
:root {

    menupopup,
    panel {
        --popup-padding: var(--popup-padding-block) var(--popup-padding-inline);
        --menuitem-padding-inline: 12px;
        --menuitem-icon-gap: 8px;
        --menuitem-icon-size: 16px;
        --menuitem-text-padding-start: 0px;
        --menuitem-margin-inline: 0px;
        --menuitem-padding-start-without-icon: calc(var(--menuitem-padding-inline) + var(--menuitem-icon-size) + var(--menuitem-icon-gap) + var(--menuitem-text-padding-start));

        @include NotOption("widget.windows.mica.popups", 2) {
            --panel-background: Field !important;
            --panel-background: light-dark(#fff, #353d49) !important;
            --panel-color: light-dark(#1c1c1c, #fff) !important;
        }

        --panel-dimmed: color-mix(in srgb, currentColor 17%, transparent) !important;
        --panel-dimmed-further: color-mix(in srgb, currentColor 30%, transparent) !important;

        --panel-border-radius: 6px;
        --panel-list-border-radius: 4px;
        --panel-border: 1px solid var(--arrowpanel-border-color);
        --panel-margin-block: 4px;
        --panel-margin-inline: 4px;
        --panel-shadow: 0 1px 2px 1px rgba(0, 0, 0, .1),
        0 1px 5px -3px rgba(0, 0, 0, .1),
        0 6px 10px 1px rgba(0, 0, 0, .1),
        0 4px 12px 2px rgba(0, 0, 0, .1);
    }
}

/** 显示 addMenu 菜单图标 */
:is(#contentAreaContextMenu, #tabContextMenu)[photoncompact="true"]:not([needsgutter])>.addMenu:is(menu, menuitem)> :is(.menu-iconic-left, .menu-icon),
:is(#contentAreaContextMenu, #tabContextMenu)[photoncompact="true"]:not([needsgutter])>menugroup.addMenu>.addMenu.showText> :is(.menu-iconic-left, .menu-icon),
:is(#contentAreaContextMenu, #tabContextMenu)[photoncompact="true"]:not([needsgutter])>menugroup.addMenu.showText>.addMenu> :is(.menu-iconic-left, .menu-icon),
:is(#contentAreaContextMenu, #tabContextMenu)[photoncompact="true"]:not([needsgutter])>menugroup.addMenu.showFirstText>.menuitem-iconic:first-child> :is(.menu-iconic-left, .menu-icon),
#tabContextMenu[photoncompact="true"] #OpenWithHelper-Tab-Menu> :is(.menu-iconic-left, .menu-icon) {
    visibility: visible !important;
    display: flex !important;
}

panelview {
    --panel-subview-body-padding: 4px;
}

/* 调整缩进 */

.subviewbutton {

    &>.toolbarbutton-icon {
        width: var(--menuitem-icon-size) !important;
        height: var(--menuitem-icon-size) !important;
        margin-inline-end: var(--menuitem-icon-gap) !important;
        padding-inline-end: 0 !important;
    }

    &>.toolbarbutton-text {
        margin-inline-start: 0 !important;
        padding-inline-start: var(--menuitem-text-padding-start) !important;
    }

    &:has(>image) {

        /* 我他妈怎么知道有的 subviewbutton 有 .toolbarbutton-icon 和 .toolbarbutton-text, 有的没有 */
        &>image {
            width: var(--menuitem-icon-size) !important;
            height: var(--menuitem-icon-size) !important;
            margin-inline-end: var(--menuitem-icon-gap) !important;
        }

        &>label {
            padding-inline-start: var(--menuitem-text-padding-start) !important;
        }
    }
}

#unified-extensions-panel {
    .unified-extensions-item .subviewbutton>.toolbarbutton-icon {
        --arrowpanel-menuitem-padding-inline: 4px;
        --arrowpanel-menuitem-padding-block: 4px;
        padding-inline-end: var(--arrowpanel-menuitem-padding-inline) !important;
    }

    .unified-extensions-item-row-wrapper>[class^="unified-extensions-item"][data-extensionid] {
        padding-inline: var(--arrowpanel-menuitem-padding-inline) !important;
    }
}

:not(#appMenu-zoom-controls)>.subviewbutton:not(#appMenu-fxa-status2) {
    margin-inline: var(--menuitem-margin-inline) !important;
}

#fxa-manage-account-button>vbox>label,
#PanelUI-fxa-menu-syncnow-button>hbox>label,
#PanelUI-remotetabs-syncnow>hbox>label,
#appMenu-fxa-label2>vbox>label {
    padding-inline-start: var(--menuitem-text-padding-start) !important;
}

.syncNowBtn {
    visibility: visible !important;
}

#PanelUI-fxa-menu-syncnow-button>hbox {
    >image {
        order: 0 !important;
        width: var(--menuitem-icon-size) !important;
        height: var(--menuitem-icon-size) !important;
        margin-inline-end: var(--menuitem-icon-gap) !important;
        padding-inline-end: 0 !important;
    }
}

#appMenu-zoom-controls,
#appMenu-fxa-status2:not([fxastatus="signedin"], [fxastatus="unverified"], [fxastatus="login-failed"]),
#appMenu-fxa-status2:is([fxastatus="signedin"], [fxastatus="unverified"], [fxastatus="login-failed"])>#appMenu-fxa-label2,
#fxa-manage-account-button {
    &::before {
        content: "";
        display: flex;
        width: var(--menuitem-icon-size) !important;
        height: var(--menuitem-icon-size) !important;
        mask-image: var(--menuitem-image) !important;
        mask-size: var(--menuitem-icon-size) !important;
        mask-repeat: no-repeat !important;
        mask-position: center !important;
        fill: var(--menuitem-fill, currentColor) !important;
        margin-inline-end: var(--menuitem-icon-gap) !important;
    }
}

#appMenu-fxa-status2:not([fxastatus="signedin"], [fxastatus="unverified"], [fxastatus="login-failed"]) {
    margin-inline: 0 !important;
}

@media (-moz-platform: windows) {
    @media (-moz-windows-non-native-menus) {
        .menu-right {
            margin-inline-end: 0 !important;
            list-style-image: none !important;
        }
    }

    menupopup[needsgutter] menu:not([icon], .menu-iconic),
    menupopup[needsgutter] menuitem:not([checked="true"], [icon], .menuitem-iconic) {
        padding-inline-start: var(--menuitem-padding-inline) !important;
    }

    menu,
    menuitem {
        margin-inline: var(--menuitem-margin-inline) !important;
    }

    :not(#context-navigation)> :is(menu, menuitem) {
        &:has(>:is(.menu-icon, .menu-iconic-left)) {
            padding-inline: var(--menuitem-padding-inline) !important;
        }

        &:not(:has(>:is(.menu-icon, .menu-iconic-left))) {
            &:before {
                content: "";
                display: flex;
                width: var(--menuitem-icon-size);
                height: var(--menuitem-icon-size);
                mask-image: var(--menuitem-image);
                mask-size: var(--menuitem-icon-size);
                mask-repeat: no-repeat;
                mask-position: center;
                fill: var(--menuitem-fill, currentColor);
                margin-inline-end: var(--menuitem-icon-gap);
            }
        }
    }

    :not(#context-navigation)>:is(menu, menuitem):not([id^="firefoxbeta_tampermonkey_net"]),
    #firefoxbeta_tampermonkey_net-menuitem-_root {
        &>:is(.menu-icon, .menu-iconic-left) {
            display: inline-flex !important;
            width: var(--menuitem-icon-size) !important;
            height: var(--menuitem-icon-size) !important;
            margin-inline-end: var(--menuitem-icon-gap) !important;
        }

        &>:is(.menu-text, .menu-iconic-text) {
            padding-inline-start: var(--menuitem-text-padding-start) !important;
        }
    }

    toolbarseparator {
        margin-inline: 0 !important;
    }
}

/* 颜色 */
menupopup,
panel[type="autocomplete-richlistbox"],
menulist>menupopup>menucaption {
    -moz-window-shadow: none !important;
    background: 0 !important;
    border: 0 !important;
    color: var(--panel-color) !important;
    box-sizing: content-box !important;
    color: inherit !important;
}

.panel-arrowcontent {
    background: 0 !important;
    padding: 0 !important;
    box-shadow: none !important;
    font: -moz-pull-down-menu !important;
    border: 0 !important;
}

@include Dark {

    /* 深色模式菜单背景颜色 */
    panel[type="autocomplete-richlistbox"],
    .menupopup-arrowscrollbox {
        background-color: #353d49 !important;
    }
}

/* 圆角 */
menupopup,
.menupopup-arrowscrollbox {
    border-radius: var(--panel-border-radius) !important;
}

/* themes a menupopup (or other root level / shadow dom popup) as a panel */
/* Mozilla's use of shadow dom means we can't use a menupopup > .popup-internal-box */
.popup-internal-box,
#PopupAutoComplete>*,
.menupopup-arrowscrollbox {
    background: var(--panel-background) !important;
    border-radius: var(--panel-border-radius) !important;
    border: 1px solid transparent !important;
    padding: 4px !important;

    @include Option("widget.windows.mica") {
        border: 0 !important;
    }

    
}

#PopupSearchAutoComplete>* {
    border-radius: 0 !important;
}

#PopupSearchAutoComplete> :first-child {
    border-radius: var(--panel-list-border-radius) var(--panel-list-border-radius) 0 0 !important;
}

#PopupSearchAutoComplete> :last-child {
    border-radius: 0 0 var(--panel-list-border-radius) var(--panel-list-border-radius) !important;
}

/* autocomplete panel can't overlap the textbox, so shadow can't go up
   more than 1px */
panel[type="autocomplete-richlistbox"]>.autocomplete-richlistbox {
    box-shadow: var(--panel-shadow) !important;
    border: var(--panel-border) !important
}

/* search panel gets special treatment; it has multiple children */
#PopupSearchAutoComplete>.autocomplete-richlistbox {
    box-shadow: none !important;
}

#PopupSearchAutoComplete {
    filter:
        drop-shadow(0 8px 6px rgba(0, 0, 0, .25)) drop-shadow(0 1px 1px rgba(0, 0, 0, .125)) !important;
}

/* reset non-layout props when embedded in a panel
   (panel handles panel theming in this case) */
.panel-arrowcontent>.popup-internal-box {
    background: 0 !important;
    border-radius: 0 !important;
    box-shadow: none !important;
}

/* shotgun approach to undo this selector...
   #BMB_bookmarksPopup menupopup[placespopup="true"]:-moz-lwtheme::part(innerbox)
   ...without being able to use ::part() in userChrome.css */
[part="innerbox"] {
    box-shadow: none !important;
    margin: 0 !important;
}

.autocomplete-richlistitem {
    height: 30px !important;
    border: 0 !important;
    color: inherit !important;
    fill-opacity: initial !important;

    :root[uidensity="compact"] & {
        height: 26px !important;
    }
}

menupopup :is(menu, menuitem) {
    height: 30px !important;

    :root[uidensity="compact"] & {
        height: 26px !important;
    }
}

/* 修复输入框下拉菜单选中样式 */
.autocomplete-richlistitem[selected] {
    color: #ffffff !important;
}

menupopup menu[_moz-menuactive=true],
menupopup menuitem[_moz-menuactive=true],
menupopup menuitem:hover:not([disabled=true]),
menupopup menu:hover:not([disabled=true]),
.autocomplete-richlistitem:hover:not([disabled=true]):not([selected=true]) {
    background-color: var(--panel-dimmed) !important;
}

/* disable vertical menu scroll buttons and use a good ol' scrollbar */
/* this is a shotgun approach, expect side effects */
scrollbox[orient=vertical] {
    overflow-y: auto !important;
}

/* this is a bit depressing... */
/* work around lack of ::part selector support */
:root {
    --scrollbutton-display: -moz-box !important;
}

.menuitem-iconic:not([data-usercontextid]),
.menu-iconic-icon,
:not([data-usercontextid])>.menu-icon

/* .menu-iconic-icons not necessarily within a .menuitem-iconic (don't ask me why...) */
    {
    fill: currentColor !important;
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
}