//
// 通用、可嵌套的媒体查询 Mixin 框架 (独立查询版)
// 作者: AI Assistant
// 功能: 提供 Option(), NotOption(), OS(), Dark() 和 Any() mixin。
//      - 嵌套调用时保持独立媒体查询 (不合并条件)
//      - 保留嵌套结构输出
//
@use "sass:string";
@use "sass:list";

// --- 辅助函数 (保持不变) ---

/// @name F-OS
/// @description 返回一个用于 OS 查询的字符串。
@function F-OS($os) {
    $platform: null;
    $os-lower: string.to-lower-case($os);

    @if $os-lower =="windows" or $os-lower =="win" {
        $platform: "windows";
    }

    @else if $os-lower =="macos" or $os-lower =="mac" {
        $platform: "macos";
    }

    @else if $os-lower =="linux" {
        $platform: "linux";
    }

    @else {
        @warn "未知的操作系统: '#{$os}'。将返回 null。";
        @return null;
    }

    @return "(-moz-platform: #{$platform})";
}

/// @name F-Light
/// @description 返回浅色模式的查询字符串。
@function F-Light() {
    @return "(prefers-color-scheme: light)";
}

/// @name F-Dark
/// @description 返回深色模式的查询字符串。
@function F-Dark() {
    @return "(prefers-color-scheme: dark)";
}

/// @name F-Option
/// @description 返回一个用于 -moz-pref 查询的字符串。键名会被双引号包裹。
@function F-Option($preference, $value: null) {
    @if $value ==null {
        @return "(-moz-pref(\"#{$preference}\"))";
    }

    @else {
        @return "(-moz-pref(\"#{$preference}\", #{$value}))";
    }
}

/// @name F-NotOption
/// @description 返回一个用于 not -moz-pref 查询的字符串。
@function F-NotOption($preference) {
    @return "(not -moz-pref(\"#{$preference}\"))";
}


// --- 公共 API (修改为独立查询) ---

/// @mixin Option
/// @description 为 -moz-pref 创建独立的媒体查询。
/// @param {string} $preference - 偏好键名。
/// @param {any} $value - 可选的值。如果为空，则只检查是否存在该偏好。
/// @content 要嵌套的样式或其它媒体查询。
/// @example
///   @include Option("browser.pref1", true) {
///     body { color: red; }
///   }
@mixin Option($preference, $value: null) {
    @media #{F-Option($preference, $value)} {
        @content;
    }
}

/// @mixin NotOption
/// @description 为 not -moz-pref 创建独立的媒体查询。
/// @param {string} $preference - 要排除的偏好键名。
/// @content 要嵌套的样式或其它媒体查询。
/// @example
///   @include NotOption("browser.disabled-feature") {
///     button { display: block; }
///   }
@mixin NotOption($preference) {
    @media #{F-NotOption($preference)} {
        @content;
    }
}

/// @mixin OS
/// @description 根据操作系统创建独立的媒体查询。
/// @param {string} $os - 操作系统名称 (windows/mac/linux)。
/// @content 要嵌套的样式或其它媒体查询。
/// @example
///   @include OS("mac") {
///     .scrollbar { width: 12px; }
///   }
@mixin OS($os) {
    $query: F-OS($os);

    @if $query !=null {
        @media #{$query} {
            @content;
        }
    }

    @else {
        // 如果返回 null，跳过输出，避免无效语法
        @warn "OS 查询构建失败，未生成 CSS。";
    }
}

/// @mixin Light
/// @content 要嵌套的样式或其它媒体查询。
/// @example
///   @include Light {
///     background: #eee;
///   }
@mixin Light() {
    @media #{F-Light()} {
        @content;
    }
}

/// @mixin Dark
/// @description 深色模式下的独立媒体查询。
/// @content 要嵌套的样式或其它媒体查询。
/// @example
///   @include Dark {
///     background: #111;
///   }
@mixin Dark() {
    @media #{F-Dark()} {
        @content;
    }
}

/// @mixin Any
/// @description 将多个媒体查询条件通过 `or` 合并成一个 @media 查询。
/// @param {arglist} $queries - 一个或多个媒体查询条件字符串，如 F-Dark(), F-OS("mac") 等。
/// @content 要应用的样式。
/// @example
///   @include Any(F-Dark(), F-Light()) {
///     img { display: block; }
///   }
///
///   @include Any(F-Option("foo"), F-OS("linux")) {
///     .widget { visibility: hidden; }
///   }
@mixin Any($queries...) {
    // 构造最终的媒体查询：条件之间用 " or " 分隔
    $query: "";

    @for $i from 1 through list.length($queries) {
        $item: list.nth($queries, $i);
        $query: $query + if($i > 1, " or ", "") + $item;
    }

    @media #{$query} {
        @content;
    }
}