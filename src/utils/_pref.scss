//
// 通用、可嵌套的媒体查询 Mixin 框架 (独立/复合查询版)
// 作者: AI Assistant
// 功能: 提供 Option(), NotOption(), OS(), Dark(), Media(), Any() 等 mixin。
//      - 各 mixin 可独立使用，生成独立的 @media 规则。
//      - Media() 和 Any() mixin 可将多个条件组合成单一的 @media 规则。
//      - 保留嵌套结构输出。
//
@use "sass:string";
@use "sass:list";

// --- 辅助函数 ---

// --- F-OS (已更新) ---
/// @name F-OS
/// @description 返回一个用于 OS 查询的字符串，可以选择性地否定它。
/// @param {string} $os - 操作系统名称 (windows/mac/linux)。
/// @param {boolean} $negate [false] - 如果为 true，则添加 'not' 关键字。
/// @return {string | null} - 格式化的媒体查询条件，或在 OS 无效时返回 null。
@function F-OS($os, $negate: false) {
    $platform: null;
    $os-lower: string.to-lower-case($os);

    @if $os-lower =="windows" or $os-lower =="win" {
        $platform: "windows";
    } @else if $os-lower =="macos" or $os-lower =="mac" {
        $platform: "macos";
    } @else if $os-lower =="linux" {
        $platform: "linux";
    } @else {
        @warn "未知的操作系统: '#{$os}'。将返回 null。";
        @return null;
    }

    $inner-query: "(-moz-platform: #{$platform})";

    @if $negate {
        @return "(not #{$inner-query})";
    } @else {
        @return $inner-query;
    }
}

/// @name F-Light
/// @description 返回浅色模式的查询字符串。
@function F-Light() {
    @return "(prefers-color-scheme: light)";
}

/// @name F-Dark
/// @description 返回深色模式的查询字符串。
@function F-Dark() {
    @return "(prefers-color-scheme: dark)";
}

/// @name F-Option
/// @description 返回一个用于 -moz-pref 查询的字符串。键名会被双引号包裹。
@function F-Option($preference, $value: null) {
    @if $value ==null {
        @return "(-moz-pref(\"#{$preference}\"))";
    } @else {
        @return "(-moz-pref(\"#{$preference}\", #{$value}))";
    }
}

/// @name F-NotOption
/// @description 返回一个用于 not -moz-pref 查询的字符串。
@function F-NotOption($preference) {
    @return "(not -moz-pref(\"#{$preference}\"))";
}

/// @name F-Media
/// @description 返回一个通用的媒体特性查询字符串，可以选择性地否定它。
/// @param {string} $feature - 媒体特性。
/// @param {boolean} $negate [false] - 如果为 true，则添加 'not' 关键字。
@function F-Media($feature, $negate: false) {
    $inner-query: "(#{$feature})";
    @if $negate {
        @return "(not #{$inner-query})";
    } @else {
        @return $inner-query;
    }
}


// --- 公共 API ---

/// @mixin Option
@mixin Option($preference, $value: null) {
    @media #{F-Option($preference, $value)} {
        @content;
    }
}

/// @mixin NotOption
@mixin NotOption($preference) {
    @media #{F-NotOption($preference)} {
        @content;
    }
}

/// @mixin OS
@mixin OS($os) {
    $query: F-OS($os);
    @if $query !=null {
        @media #{$query} {
            @content;
        }
    } @else {
        @warn "OS 查询构建失败，未生成 CSS。";
    }
}

/// @mixin Light
@mixin Light() {
    @media #{F-Light()} {
        @content;
    }
}

/// @mixin Dark
@mixin Dark() {
    @media #{F-Dark()} {
        @content;
    }
}

// --- 复合查询 Mixins ---

/// @mixin Any
@mixin Any($queries...) {
    $full-query: "";
    @for $i from 1 through list.length($queries) {
        $item: list.nth($queries, $i);
        $full-query: $full-query + if($i > 1, " or ", "") + $item;
    }
    @media #{$full-query} {
        @content;
    }
}

/// @mixin Media
@mixin And($queries...) {
    $full-query: "";
    @for $i from 1 through list.length($queries) {
        $item: list.nth($queries, $i);
        $full-query: $full-query + if($i > 1, " and ", "") + $item;
    }
    @media #{$full-query} {
        @content;
    }
}

